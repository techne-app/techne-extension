(()=>{var e={443:(e,t,r)=>{"use strict";r.r(t),r.d(t,{vectorDb:()=>n});var o=function(e,t,r,o){return new(r||(r=Promise))((function(n,s){function i(e){try{c(o.next(e))}catch(e){s(e)}}function a(e){try{c(o.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,a)}c((o=o.apply(e,t||[])).next())}))};const n=new class{constructor(){this.dbName="VectorDB",this.version=1}open(){return o(this,void 0,void 0,(function*(){return new Promise(((e,t)=>{const r=indexedDB.open(this.dbName,this.version);r.onerror=()=>t(r.error),r.onsuccess=()=>e(r.result),r.onupgradeneeded=e=>{const t=e.target.result;if(!t.objectStoreNames.contains("embeddings")){const e=t.createObjectStore("embeddings",{keyPath:"id",autoIncrement:!0});e.createIndex("tag","tag"),e.createIndex("timestamp","timestamp")}}}))}))}getAllEmbeddings(){return o(this,void 0,void 0,(function*(){const e=yield this.open();return new Promise(((t,r)=>{const o=e.transaction(["embeddings"],"readonly").objectStore("embeddings").getAll();o.onerror=()=>r(o.error),o.onsuccess=()=>t(o.result)}))}))}storeEmbedding(e,t){return o(this,void 0,void 0,(function*(){const r=yield this.open();return new Promise(((o,n)=>{const s=r.transaction(["embeddings"],"readwrite").objectStore("embeddings"),i={tag:e,vectorData:new Float32Array(t),timestamp:Date.now()},a=s.add(i);a.onerror=()=>n(a.error),a.onsuccess=()=>o(a.result)}))}))}clearEmbeddings(){return o(this,void 0,void 0,(function*(){const e=yield this.open();return new Promise(((t,r)=>{const o=e.transaction(["embeddings"],"readwrite").objectStore("embeddings").clear();o.onerror=()=>r(o.error),o.onsuccess=()=>t()}))}))}}}},t={};function r(o){var n=t[o];if(void 0!==n)return n.exports;var s=t[o]={exports:{}};return e[o](s,s.exports,r),s.exports}r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};const{vectorDb:o}=r(443);chrome.action.onClicked.addListener((async()=>{const e=chrome.runtime.getURL("index.html"),t=await chrome.tabs.query({url:e});t.length>0?(await chrome.tabs.update(t[0].id,{active:!0}),await chrome.windows.update(t[0].windowId,{focused:!0})):await chrome.tabs.create({url:e})})),chrome.runtime.onMessage.addListener(((e,t,r)=>{"NEW_EMBEDDING"===e.type&&o.storeEmbedding(e.data.tag,e.data.vectorData).then((()=>{chrome.tabs.query({},(e=>{e.forEach((e=>{chrome.tabs.sendMessage(e.id,{type:"EMBEDDINGS_UPDATED"})}))}))})).catch((e=>{console.error("Error storing embedding:",e)}))}))})();